// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewshoreAirInfrastructure.SQLServer;

#nullable disable

namespace NewshoreAirInfrastructure.Migrations
{
    [DbContext(typeof(NewshoreAirContext))]
    [Migration("20230506200333_InitDataBase")]
    partial class InitDataBase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NewshoreAirInfrastructure.SQLServer.Models.FlightModel", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightId"));

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("TransportId")
                        .HasColumnType("int");

                    b.HasKey("FlightId");

                    b.HasIndex("TransportId");

                    b.ToTable("Flight", (string)null);
                });

            modelBuilder.Entity("NewshoreAirInfrastructure.SQLServer.Models.JourneyFlightModel", b =>
                {
                    b.Property<int>("JourneyFlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JourneyFlightId"));

                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.Property<int>("JourneyId")
                        .HasColumnType("int");

                    b.HasKey("JourneyFlightId");

                    b.HasIndex("FlightId");

                    b.HasIndex("JourneyId");

                    b.ToTable("JourneyFlight", (string)null);
                });

            modelBuilder.Entity("NewshoreAirInfrastructure.SQLServer.Models.JourneyModel", b =>
                {
                    b.Property<int>("JourneyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JourneyId"));

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("JourneyId");

                    b.ToTable("Journey", (string)null);
                });

            modelBuilder.Entity("NewshoreAirInfrastructure.SQLServer.Models.TransportModel", b =>
                {
                    b.Property<int>("TransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransportId"));

                    b.Property<string>("FlightCarrier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransportId");

                    b.ToTable("Transport", (string)null);
                });

            modelBuilder.Entity("NewshoreAirInfrastructure.SQLServer.Models.FlightModel", b =>
                {
                    b.HasOne("NewshoreAirInfrastructure.SQLServer.Models.TransportModel", "Transport")
                        .WithMany("Flights")
                        .HasForeignKey("TransportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("NewshoreAirInfrastructure.SQLServer.Models.JourneyFlightModel", b =>
                {
                    b.HasOne("NewshoreAirInfrastructure.SQLServer.Models.FlightModel", "Flight")
                        .WithMany("Flights")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewshoreAirInfrastructure.SQLServer.Models.JourneyModel", "Journey")
                        .WithMany("Flights")
                        .HasForeignKey("JourneyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Journey");
                });

            modelBuilder.Entity("NewshoreAirInfrastructure.SQLServer.Models.FlightModel", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("NewshoreAirInfrastructure.SQLServer.Models.JourneyModel", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("NewshoreAirInfrastructure.SQLServer.Models.TransportModel", b =>
                {
                    b.Navigation("Flights");
                });
#pragma warning restore 612, 618
        }
    }
}
